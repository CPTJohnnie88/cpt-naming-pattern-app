trigger:
  branches:
    include:
      - main
      - develop
      - staging

variables:
  dockerRegistryServiceConnection: '$(SERVICE_CONNECTION)'
  imageRepository: '<Your Image Repository>'
  containerRegistry: '$(CONTAINER_REGISTRY)'
  dockerfilePath: './src/.'
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build and Push
    jobs:
      - job: BuildAndPush
        displayName: Build and Push
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: '**/*.csproj'
            displayName: 'Build .NET application'

          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: false
            displayName: 'Publish .NET application'

          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: '$(imageRepository)'
              dockerfile: '$(dockerfilePath)'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'
            displayName: 'Build and Push Docker image'

  - stage: Deploy
    displayName: Deploy to Azure Container App
    dependsOn: Build
    jobs:
      - deployment: DeployToAzureContainerApp_DEV
        displayName: Deploy to Azure Container App (DEV)
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'DEV'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: ''
                    appType: 'webAppContainer'
                    WebAppName: 'cop-webcon-namingpattern-corp-uks'
                    deployToSlotOrASE: true
                    ResourceGroupName: '$(RESOURCE_GROUP)'
                    DockerNamespace: '$(containerRegistry)'
                    DockerRepository: '$(imageRepository)'
                    DockerImageTag: '$(tag)'
                  displayName: 'Deploy to Azure Container App (DEV)'